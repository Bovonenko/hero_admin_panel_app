{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","state","visibleHeroes","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","catch","id","console","log","heroDeleted","err","arr","items","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","filters","options","value","text","uuidv4","renderFilters","initialValues","validationSchema","Yup","required","onSubmit","values","resetForm","hero","newHero","JSON","parse","stringify","res","htmlFor","placeholder","color","as","HeroesFilters","filtersLoadinStatus","activeFilter","filtersFetched","elements","btnClass","App","initialState","heroes","reducer","action","filter","item","newHeroList","newCreatedHeroList","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAU,WA2BnB,MAAO,CAACC,QAxBQC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAKGC,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAL7B,WAKdE,EALc,QAONC,GAPM,sBAQV,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAR5C,wBAWDH,EAASI,OAXR,eAWdC,EAXc,yBAabA,GAba,uGAAD,sDAkBxB,M,yBCuBQC,EA9CQ,SAAC,GAA4C,IAE5DC,EAFiBC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAIjD,OAAQD,GACJ,IAAK,OACDH,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBAEIK,UAAS,kDAA6CL,GAF1D,UAGI,qBAAKM,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAf,UAEI,oBAAIA,UAAU,aAAd,SAA4BJ,IAC5B,mBAAGI,UAAU,YAAb,SAA0BH,OAE9B,sBAAMO,QAASL,EACXC,UAAU,wFADd,SAEI,wBACAK,KAAK,SACLL,UAAU,sBACVM,aAAW,gBC9BZC,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAlD,SACI,sBAAMR,UAAU,kBAAhB,2BCuEGS,G,MA3DI,WAAO,IAAD,EACwBC,aAAY,SAAAC,GAAK,OAAIA,KAA3DC,EADc,EACdA,cAAeC,EADD,EACCA,oBAChBC,EAAWC,cACVnC,EAAWD,IAAXC,QAEPoC,qBAAU,WACNF,ECrBG,CACHT,KAAM,oBDqBNzB,EAAQ,gCACHqC,MAAK,SAAAxB,GAAI,OAAIqB,ECjBf,CACHT,KAAM,iBACNa,QDeyCzB,OACpC0B,OAAM,kBAAML,ECXd,CACHT,KAAM,+BDaP,IAEH,IAAMN,EAAWlB,uBAAY,SAACuC,GAC1BxC,EAAQ,gCAAD,OAAiCwC,GAAM,UACzCH,MAAK,SAAAxB,GAAI,OAAI4B,QAAQC,IAAI7B,EAAM,cAC/BwB,KAAKH,ECmBS,SAACM,GACxB,MAAO,CACHf,KAAM,eACNa,QAASE,GDtBUG,CAAYH,KAC1BD,OAAM,SAAAK,GAAG,OAAIH,QAAQC,IAAIE,QAE/B,CAAC5C,IAEJ,GAA4B,YAAxBiC,EACA,OAAO,cAAC,EAAD,IACJ,GAA4B,UAAxBA,EACP,OAAO,oBAAIb,UAAU,mBAAd,mGAGX,IAA0ByB,EAuBpBC,EAtBiB,KADGD,EAuBKb,GAtBnBe,OAEA,cAACC,EAAA,EAAD,CACIC,QAAS,IACTC,WAAW,OAFf,SAGI,oBAAI9B,UAAU,mBAAd,gGAKLyB,EAAIM,KAAI,YAAqB,IAAnBX,EAAkB,EAAlBA,GAAOY,EAAW,sBAC/B,OACI,cAACJ,EAAA,EAAD,CAEQC,QAAS,IACTC,WAAW,OAHnB,SAII,cAAC,EAAD,2BAAoBE,GAApB,IAA2BjC,SAAU,kBAAMA,EAASqB,QAH3CA,MAUzB,OACI,cAACa,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACKR,M,yBEyCES,EA1FO,WAAO,IAElBC,EAAW1B,aAAY,SAAAC,GAAK,OAAIA,KAAhCyB,QACDtB,EAAWC,cACVnC,EAAWD,IAAXC,QAaDyD,EAXgB,SAACD,GACnB,OAAOA,EAAQL,KAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACxB,GAAc,QAAVD,EAGJ,OACI,wBAAuBA,MAAOA,EAA9B,SAAsCC,GAAzBC,kBAKTC,CAAcL,GAE9B,OACI,qBAAKpC,UAAU,+BAAf,SACI,cAAC,IAAD,CACI0C,cAAe,CACXtB,GAAI,GACJxB,KAAM,GACNC,YAAa,GACbC,QAAS,IAEb6C,iBAAkBC,IAAW,CACzBhD,KAAMgD,MAAaC,SAAS,0BAC5BhD,YAAa+C,MAAaC,SAAS,0BACnC/C,QAAS8C,MAAaC,SAAS,uBAEnCC,SAAU,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAChBD,EAAO3B,GAAKoB,cACZ,IDXQS,ECWFC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUN,EAAQ,KAAM,IAExDnE,EAAQ,+BAAgC,OAAQuE,KAAKE,UAAUN,IAC1D9B,MAAK,SAAAqC,GAAG,OAAIjC,QAAQC,IAAIgC,EAAK,wBAC7BrC,KAAKH,GDfFmC,ECeuBC,EDdxC,CACH7C,KAAM,eACNa,QAAS+B,MCaQhC,KAAK+B,KACL7B,OAAM,SAAAK,GAAG,OAAIH,QAAQC,IAAIE,OApBtC,SAuBI,eAAC,IAAD,WAEI,sBAAKxB,UAAU,OAAf,UACI,uBAAOuD,QAAQ,OAAOvD,UAAU,kBAAhC,oGACA,cAAC,IAAD,CACIJ,KAAK,OACLwB,GAAG,OACHf,KAAK,OACLmD,YAAY,8EACZxD,UAAU,iBACd,cAAC,IAAD,CAAcG,MAAO,CAACsD,MAAO,WAAY7D,KAAK,OAAOsC,UAAU,WAGnE,sBAAKlC,UAAU,OAAf,UACI,uBAAOuD,QAAQ,cAAcvD,UAAU,kBAAvC,8DACA,cAAC,IAAD,CACIJ,KAAK,cACL4D,YAAY,sDACZpC,GAAG,cACHpB,UAAU,eACV0D,GAAG,WACHvD,MAAO,CAAC,OAAU,WACtB,cAAC,IAAD,CAAcA,MAAO,CAACsD,MAAO,WAAY7D,KAAK,cAAcsC,UAAU,WAG1E,sBAAKlC,UAAU,OAAf,UACI,uBAAOuD,QAAQ,UAAUvD,UAAU,aAAnC,kIACA,eAAC,IAAD,CACI0D,GAAG,SACHb,UAAQ,EACR7C,UAAU,cACVoB,GAAG,UACHxB,KAAK,UALT,UAMI,2IACCyC,KAEL,cAAC,IAAD,CAAclC,MAAO,CAACsD,MAAO,WAAY7D,KAAK,UAAUsC,UAAU,WAGtE,wBAAQ7B,KAAK,SAASL,UAAU,kBAAhC,gE,iBCpCL2D,EAnDO,WAAO,IAAD,EAE6BjD,aAAY,SAAAC,GAAK,OAAIA,KAAnEyB,EAFiB,EAEjBA,QAASwB,EAFQ,EAERA,oBAAqBC,EAFb,EAEaA,aAC/B/C,EAAWC,cACVnC,EAAWD,IAAXC,QAWP,GATAoC,qBAAU,WACNF,EFJG,CACHT,KAAM,qBEINzB,EAAQ,iCACHqC,MAAK,SAAAxB,GAAI,OAAIqB,EFDI,SAACsB,GAC3B,MAAO,CACH/B,KAAM,kBACNa,QAASkB,GEFkB0B,CAAerE,OACrC0B,OAAM,kBAAML,EFMd,CACHT,KAAM,gCEJP,IAEyB,YAAxBuD,EACA,OAAO,cAAC,EAAD,IACJ,GAA4B,UAAxBA,EACP,OAAO,oBAAI5D,UAAU,mBAAd,mGAGX,IAgBM+D,EAAyB3B,EAfhBL,KAAI,YAA+B,IAA7BQ,EAA4B,EAA5BA,KAAMvC,EAAsB,EAAtBA,UAAWsC,EAAW,EAAXA,MAExB0B,EAAWlC,IAAW,MAAO9B,EAAW,CAC1C,OAAU6D,IAAiBvB,IAG/B,OACI,wBACQtC,UAAWgE,EACX5D,QAAS,kBAAMU,EFT5B,CACHT,KAAM,wBACNa,QEO4DoB,KAFpD,SAGUC,GAHGC,kBAUzB,OACI,qBAAKxC,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,+LACA,qBAAKA,UAAU,YAAf,SACK+D,UCxCNE,G,OAfH,WAER,OACI,sBAAMjE,UAAU,MAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,c,eCddkE,EAAe,CACjBC,OAAQ,GACRtD,oBAAqB,OACrBuB,QAAS,GACTwB,oBAAqB,OACrBhD,cAAe,GACfiD,aAAc,OAsEHO,EAnEC,WAAmC,IAAlCzD,EAAiC,uDAAzBuD,EAAcG,EAAW,uCAC9C,OAAQA,EAAOhE,MACX,IAAK,kBACD,OAAO,2BACAM,GADP,IAEIE,oBAAqB,YAE7B,IAAK,iBACD,OAAO,2BACAF,GADP,IAEIwD,OAAQE,EAAOnD,QACfN,cAAsC,QAAvBD,EAAMkD,aACLQ,EAAOnD,QACPmD,EAAOnD,QAAQoD,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,UAAYa,EAAMkD,gBACrEhD,oBAAqB,SAE7B,IAAK,wBACD,OAAO,2BACAF,GADP,IAEIE,oBAAqB,UAE7B,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIiD,oBAAqB,YAE7B,IAAK,kBACD,OAAO,2BACAjD,GADP,IAEIyB,QAASiC,EAAOnD,QAChB0C,oBAAqB,SAE7B,IAAK,yBACD,OAAO,2BACAjD,GADP,IAEIiD,oBAAqB,UAE7B,IAAK,wBACD,OAAO,2BACAjD,GADP,IAEIkD,aAAcQ,EAAOnD,QACrBN,cAAkC,QAAnByD,EAAOnD,QACNP,EAAMwD,OACNxD,EAAMwD,OAAOG,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,UAAYuE,EAAOnD,aAE5E,IAAK,eACD,IAAMsD,EAAc7D,EAAMwD,OAAOG,QAAO,SAAAC,GAAI,OAAIA,EAAKnD,KAAOiD,EAAOnD,WACnE,OAAO,2BACAP,GADP,IAEIwD,OAAQK,EACR5D,cAAsC,QAAvBD,EAAMkD,aACLW,EACAA,EAAYF,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,UAAYa,EAAMkD,kBAE1E,IAAK,eACD,IAAMY,EAAkB,sBAAO9D,EAAMwD,QAAb,CAAqBE,EAAOnD,UACpD,OAAO,2BACAP,GADP,IAEIwD,OAAQM,EACR7D,cAAsC,QAAvBD,EAAMkD,aACLY,EACAA,EAAmBH,QAAO,SAAAC,GAAI,OAAIA,EAAKzE,UAAYa,EAAMkD,kBAEjF,QAAS,OAAOlD,ICnET+D,EAFDC,YAAYP,EAASQ,OAAOC,8BAAgCD,OAAOC,gC,OCMjFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,U","file":"static/js/main.02cbff86.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","const HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n           \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete}\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button \n                type=\"button\" \n                className=\"btn-close btn-close\" \n                aria-label=\"Close\"\n                ></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { heroesFetching, heroesFetched, heroesFetchingError, heroDeleted } from '../../actions';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\nimport './heroesList.scss';\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n    const {visibleHeroes, heroesLoadingStatus} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(heroesFetching()); \n        request(\"http://localhost:3001/heroes\")\n            .then(data => dispatch(heroesFetched(data)))\n            .catch(() => dispatch(heroesFetchingError()))\n\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, \"Deleted\"))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line \n    }, [request])\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition \n                    timeout={500} \n                    classNames='hero'>\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                        key={id} \n                        timeout={500} \n                        classNames='hero'>\n                    <HeroesListItem {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const items = renderHeroesList(visibleHeroes);\n    return (\n        <TransitionGroup component='ul'>\n            {items}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;\n\n\n    // const filterPost = (items, filter) => {\n    //     switch (filter) {\n    //         case 'fire': \n    //             return items.filter(item => item.element === filter)\n    //         case 'water':\n    //             return items.filter(item => item.element === filter)\n    //         case 'wind': \n    //             return items.filter(item => item.element === filter)\n    //         case 'earth':\n    //             return items.filter(item => item.element === filter)\n    //         default: \n    //             return items\n    //     }\n    // }\n\n    // const visibleData = filterPost(heroes, filter)","export const heroesFetching = () => {\n    return {\n        type: 'HEROES_FETCHING'\n    }\n}\n\nexport const heroesFetched = (heroes) => {\n    return {\n        type: 'HEROES_FETCHED',\n        payload: heroes\n    }\n}\n\nexport const heroesFetchingError = () => {\n    return {\n        type: 'HEROES_FETCHING_ERROR'\n    }\n}\n\nexport const filtersFetching = () => {\n    return {\n        type: 'FILTERS_FETCHING'\n    }\n}\n\nexport const filtersFetched = (filters) => {\n    return {\n        type: 'FILTERS_FETCHED',\n        payload: filters\n    }\n}\n\nexport const filtersFetchingError = () => {\n    return {\n        type: 'FILTERS_FETCHING_ERROR'\n    }\n}\n\nexport const activeFilterChanged = (filter) => {\n    return {\n        type: 'ACTIVE_FILTER_CHANGED',\n        payload: filter\n    }\n}\n\nexport const heroCreated = (hero) => {\n    return {\n        type: 'HERO_CREATED',\n        payload: hero\n    }\n}\n\nexport const heroDeleted = (id) => {\n    return {\n        type: 'HERO_DELETED',\n        payload: id\n    }\n}\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { heroCreated } from '../../actions';\nimport { useHttp } from '../../hooks/http.hook';\n\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\n    const {filters} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const renderFilters = (filters) => {\n        return filters.map(({value, text}) => {\n            if (value === 'all') {\n                return;\n            }\n            return (\n                <option key={uuidv4()} value={value}>{text}</option>\n            )\n        })\n    }\n\n    const options = renderFilters(filters);\n\n    return (\n        <div className=\"border p-4 shadow-lg rounded\">\n            <Formik \n                initialValues={{\n                    id: '',\n                    name: '',\n                    description: '',\n                    element: ''\n                }}\n                validationSchema={Yup.object({\n                    name: Yup.string().required('This field is required'),\n                    description: Yup.string().required('This field is required'),\n                    element: Yup.string().required('Choose an element')\n                })}\n                onSubmit={(values, {resetForm}) => {\n                    values.id = uuidv4();\n                    const newHero = JSON.parse(JSON.stringify(values, null, 2))\n                    \n                    request('http://localhost:3001/heroes', 'POST', JSON.stringify(values))\n                        .then(res => console.log(res, 'Successfully sent'))\n                        .then(dispatch(heroCreated(newHero)))\n                        .then(resetForm())\n                        .catch(err => console.log(err));\n                }}>\n\n                <Form>\n                    \n                    <div className=\"mb-3\">\n                        <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                        <Field \n                            name=\"name\" \n                            id=\"name\" \n                            type=\"text\"\n                            placeholder='Как меня зовут?' \n                            className=\"form-control\"/>\n                        <ErrorMessage style={{color: '#dc3545'}} name='name' component='div'/>\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"description\" className=\"form-label fs-4\">Описание</label>\n                        <Field\n                            name=\"description\"\n                            placeholder='Что я умею?' \n                            id=\"description\" \n                            className=\"form-control\"\n                            as=\"textarea\"\n                            style={{\"height\": '130px'}}/>\n                        <ErrorMessage style={{color: '#dc3545'}} name='description' component='div'/>\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                        <Field \n                            as=\"select\"\n                            required\n                            className=\"form-select\" \n                            id=\"element\" \n                            name=\"element\">\n                            <option >Я владею элементом...</option>\n                            {options}\n                        </Field>\n                        <ErrorMessage style={{color: '#dc3545'}} name='element' component='div'/>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nexport default HeroesAddForm;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { filtersFetching, filtersFetched, filtersFetchingError, activeFilterChanged } from '../../actions';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport Spinner from '../spinner/Spinner';\n// const classNames = require('classnames');\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadinStatus, activeFilter} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(filtersFetching());\n        request('http://localhost:3001/filters')\n            .then(data => dispatch(filtersFetched(data)))\n            .catch(() => dispatch(filtersFetchingError()))\n            \n        // eslint-disable-next-line\n    }, [])\n\n    if (filtersLoadinStatus === 'loading') {\n        return <Spinner/>;\n    } else if (filtersLoadinStatus === 'error') {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5> \n    }\n\n    const renderFilters = (arr) => {\n        return arr.map(({text, className, value}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': activeFilter === value\n            })\n\n            return (\n                <button key={uuidv4()}\n                        className={btnClass}\n                        onClick={() => dispatch(activeFilterChanged(value))}\n                        >{text}</button>\n            )\n        })\n    } \n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n    filters: [],\n    filtersLoadinStatus: 'idle',\n    visibleHeroes: [],\n    activeFilter: 'all'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'HEROES_FETCHING':\n            return {\n                ...state,\n                heroesLoadingStatus: 'loading'\n            }\n        case 'HEROES_FETCHED':\n            return {\n                ...state,\n                heroes: action.payload,\n                visibleHeroes: state.activeFilter === 'all' ?\n                                action.payload :\n                                action.payload.filter(item => item.element === state.activeFilter),\n                heroesLoadingStatus: 'idle'\n            }\n        case 'HEROES_FETCHING_ERROR':\n            return {\n                ...state,\n                heroesLoadingStatus: 'error'\n            }\n        case 'FILTERS_FETCHING':\n            return {\n                ...state,\n                filtersLoadinStatus: 'loading'\n            }\n        case 'FILTERS_FETCHED':\n            return {\n                ...state,\n                filters: action.payload,\n                filtersLoadinStatus: 'idle'\n            }\n        case 'FILTERS_FETCHING_ERROR':\n            return {\n                ...state,\n                filtersLoadinStatus: 'error'\n            }    \n        case 'ACTIVE_FILTER_CHANGED':\n            return {\n                ...state,\n                activeFilter: action.payload,\n                visibleHeroes: action.payload === 'all' ? \n                                state.heroes : \n                                state.heroes.filter(item => item.element === action.payload)\n            }\n        case 'HERO_DELETED':\n            const newHeroList = state.heroes.filter(item => item.id !== action.payload);\n            return {\n                ...state,\n                heroes: newHeroList,\n                visibleHeroes: state.activeFilter === 'all' ? \n                                newHeroList : \n                                newHeroList.filter(item => item.element === state.activeFilter)\n            }    \n        case 'HERO_CREATED':\n            const newCreatedHeroList = [...state.heroes, action.payload]\n            return {\n                ...state,\n                heroes: newCreatedHeroList,\n                visibleHeroes: state.activeFilter === 'all' ?\n                                newCreatedHeroList :\n                                newCreatedHeroList.filter(item => item.element === state.activeFilter)\n            }    \n        default: return state\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}